var searchIndex = {};
searchIndex['restructure'] = {"items":[[3,"Restruct","restructure","Contains the `fill` method used to fill the struct with fields",null,null],[8,"RegexStruct","","This trait allows you to match struct fields with regexp",null,null],[10,"as_regex","","This function returns the Regex representation of the struct",0,{"inputs":[{"name":"regexstruct"}],"output":{"name":"ref"}}],[10,"find","","This function takes a Slice, find Captures in it and assigns\nit to the appropriate struct fields",0,{"inputs":[{"name":"regexstruct"},{"name":"str"}],"output":{"name":"self"}}],[11,"fill","","This function takes a `RegexStruct` and a `Slice` and returns a `RegexStruct` with its fields filled with\n the patterns from the text",1,{"inputs":[{"name":"restruct"},{"name":"t"},{"name":"str"}],"output":{"name":"t"}}],[14,"regexify!","","Create a struct with regex patterns and implements RegexStruct trait on it.",null,null]],"paths":[[8,"RegexStruct"],[3,"Restruct"]]};
initSearch(searchIndex);
